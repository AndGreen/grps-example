/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto$types_base_pb = require('../proto-types/base_pb.js');
goog.object.extend(proto, proto$types_base_pb);
var proto$policy_entity_pb = require('../proto-policy/entity_pb.js');
goog.object.extend(proto, proto$policy_entity_pb);
goog.exportSymbol('proto.rocks.mango.proto.api.PAssignPolicy', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PCreatePolicy', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PGeneratePolicyNumbers', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PPolicyCommand', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PPolicyEvent', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PPolicyEventType', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PPolicyNumber', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PRenewPolicy', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PUpdateLimits', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PCreatePolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rocks.mango.proto.api.PCreatePolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PCreatePolicy.displayName = 'proto.rocks.mango.proto.api.PCreatePolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PAssignPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rocks.mango.proto.api.PAssignPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PAssignPolicy.displayName = 'proto.rocks.mango.proto.api.PAssignPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PUpdateLimits = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rocks.mango.proto.api.PUpdateLimits, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PUpdateLimits.displayName = 'proto.rocks.mango.proto.api.PUpdateLimits';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PRenewPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rocks.mango.proto.api.PRenewPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PRenewPolicy.displayName = 'proto.rocks.mango.proto.api.PRenewPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PPolicyCommand = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.rocks.mango.proto.api.PPolicyCommand.oneofGroups_);
};
goog.inherits(proto.rocks.mango.proto.api.PPolicyCommand, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PPolicyCommand.displayName = 'proto.rocks.mango.proto.api.PPolicyCommand';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PPolicyEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rocks.mango.proto.api.PPolicyEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PPolicyEvent.displayName = 'proto.rocks.mango.proto.api.PPolicyEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PPolicyNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rocks.mango.proto.api.PPolicyNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PPolicyNumber.displayName = 'proto.rocks.mango.proto.api.PPolicyNumber';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rocks.mango.proto.api.PGeneratePolicyNumbers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PGeneratePolicyNumbers.displayName = 'proto.rocks.mango.proto.api.PGeneratePolicyNumbers';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PCreatePolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PCreatePolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PCreatePolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PCreatePolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    policyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PCreatePolicy}
 */
proto.rocks.mango.proto.api.PCreatePolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PCreatePolicy;
  return proto.rocks.mango.proto.api.PCreatePolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PCreatePolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PCreatePolicy}
 */
proto.rocks.mango.proto.api.PCreatePolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PCreatePolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PCreatePolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PCreatePolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PCreatePolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPolicyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string policy_id = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PCreatePolicy.prototype.getPolicyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PCreatePolicy.prototype.setPolicyId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.rocks.mango.proto.api.PCreatePolicy.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PCreatePolicy.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PAssignPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PAssignPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PAssignPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PAssignPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    policyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PAssignPolicy}
 */
proto.rocks.mango.proto.api.PAssignPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PAssignPolicy;
  return proto.rocks.mango.proto.api.PAssignPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PAssignPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PAssignPolicy}
 */
proto.rocks.mango.proto.api.PAssignPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PAssignPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PAssignPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PAssignPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PAssignPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPolicyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string policy_id = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PAssignPolicy.prototype.getPolicyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PAssignPolicy.prototype.setPolicyId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.rocks.mango.proto.api.PAssignPolicy.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PAssignPolicy.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PUpdateLimits.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PUpdateLimits.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PUpdateLimits} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PUpdateLimits.toObject = function(includeInstance, msg) {
  var f, obj = {
    policyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limitsMap: (f = msg.getLimitsMap()) ? f.toObject(includeInstance, proto.rocks.mango.proto.api.PLimit.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PUpdateLimits}
 */
proto.rocks.mango.proto.api.PUpdateLimits.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PUpdateLimits;
  return proto.rocks.mango.proto.api.PUpdateLimits.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PUpdateLimits} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PUpdateLimits}
 */
proto.rocks.mango.proto.api.PUpdateLimits.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyId(value);
      break;
    case 2:
      var value = msg.getLimitsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.rocks.mango.proto.api.PLimit.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PUpdateLimits.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PUpdateLimits.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PUpdateLimits} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PUpdateLimits.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPolicyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimitsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.rocks.mango.proto.api.PLimit.serializeBinaryToWriter);
  }
};


/**
 * optional string policy_id = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PUpdateLimits.prototype.getPolicyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PUpdateLimits.prototype.setPolicyId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, PLimit> limits = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.rocks.mango.proto.api.PLimit>}
 */
proto.rocks.mango.proto.api.PUpdateLimits.prototype.getLimitsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.rocks.mango.proto.api.PLimit>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.rocks.mango.proto.api.PLimit));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.rocks.mango.proto.api.PUpdateLimits.prototype.clearLimitsMap = function() {
  this.getLimitsMap().clear();
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PRenewPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PRenewPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PRenewPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PRenewPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    policyId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    paymentId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PRenewPolicy}
 */
proto.rocks.mango.proto.api.PRenewPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PRenewPolicy;
  return proto.rocks.mango.proto.api.PRenewPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PRenewPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PRenewPolicy}
 */
proto.rocks.mango.proto.api.PRenewPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPaymentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PRenewPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PRenewPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PRenewPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PRenewPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPolicyId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPaymentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string policy_id = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PRenewPolicy.prototype.getPolicyId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PRenewPolicy.prototype.setPolicyId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string payment_id = 2;
 * @return {string}
 */
proto.rocks.mango.proto.api.PRenewPolicy.prototype.getPaymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PRenewPolicy.prototype.setPaymentId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.rocks.mango.proto.api.PPolicyCommand.oneofGroups_ = [[11,12,13,14]];

/**
 * @enum {number}
 */
proto.rocks.mango.proto.api.PPolicyCommand.PayloadCase = {
  PAYLOAD_NOT_SET: 0,
  CREATE_POLICY: 11,
  ASSIGN_POLICY: 12,
  UPDATE_LIMITS: 13,
  RENEW_POLICY: 14
};

/**
 * @return {proto.rocks.mango.proto.api.PPolicyCommand.PayloadCase}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.getPayloadCase = function() {
  return /** @type {proto.rocks.mango.proto.api.PPolicyCommand.PayloadCase} */(jspb.Message.computeOneofCase(this, proto.rocks.mango.proto.api.PPolicyCommand.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PPolicyCommand.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PPolicyCommand} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PPolicyCommand.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createPolicy: (f = msg.getCreatePolicy()) && proto.rocks.mango.proto.api.PCreatePolicy.toObject(includeInstance, f),
    assignPolicy: (f = msg.getAssignPolicy()) && proto.rocks.mango.proto.api.PAssignPolicy.toObject(includeInstance, f),
    updateLimits: (f = msg.getUpdateLimits()) && proto.rocks.mango.proto.api.PUpdateLimits.toObject(includeInstance, f),
    renewPolicy: (f = msg.getRenewPolicy()) && proto.rocks.mango.proto.api.PRenewPolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PPolicyCommand}
 */
proto.rocks.mango.proto.api.PPolicyCommand.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PPolicyCommand;
  return proto.rocks.mango.proto.api.PPolicyCommand.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PPolicyCommand} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PPolicyCommand}
 */
proto.rocks.mango.proto.api.PPolicyCommand.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 11:
      var value = new proto.rocks.mango.proto.api.PCreatePolicy;
      reader.readMessage(value,proto.rocks.mango.proto.api.PCreatePolicy.deserializeBinaryFromReader);
      msg.setCreatePolicy(value);
      break;
    case 12:
      var value = new proto.rocks.mango.proto.api.PAssignPolicy;
      reader.readMessage(value,proto.rocks.mango.proto.api.PAssignPolicy.deserializeBinaryFromReader);
      msg.setAssignPolicy(value);
      break;
    case 13:
      var value = new proto.rocks.mango.proto.api.PUpdateLimits;
      reader.readMessage(value,proto.rocks.mango.proto.api.PUpdateLimits.deserializeBinaryFromReader);
      msg.setUpdateLimits(value);
      break;
    case 14:
      var value = new proto.rocks.mango.proto.api.PRenewPolicy;
      reader.readMessage(value,proto.rocks.mango.proto.api.PRenewPolicy.deserializeBinaryFromReader);
      msg.setRenewPolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PPolicyCommand.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PPolicyCommand} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PPolicyCommand.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatePolicy();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.rocks.mango.proto.api.PCreatePolicy.serializeBinaryToWriter
    );
  }
  f = message.getAssignPolicy();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.rocks.mango.proto.api.PAssignPolicy.serializeBinaryToWriter
    );
  }
  f = message.getUpdateLimits();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.rocks.mango.proto.api.PUpdateLimits.serializeBinaryToWriter
    );
  }
  f = message.getRenewPolicy();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.rocks.mango.proto.api.PRenewPolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PCreatePolicy create_policy = 11;
 * @return {?proto.rocks.mango.proto.api.PCreatePolicy}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.getCreatePolicy = function() {
  return /** @type{?proto.rocks.mango.proto.api.PCreatePolicy} */ (
    jspb.Message.getWrapperField(this, proto.rocks.mango.proto.api.PCreatePolicy, 11));
};


/** @param {?proto.rocks.mango.proto.api.PCreatePolicy|undefined} value */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.setCreatePolicy = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.rocks.mango.proto.api.PPolicyCommand.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.clearCreatePolicy = function() {
  this.setCreatePolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.hasCreatePolicy = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional PAssignPolicy assign_policy = 12;
 * @return {?proto.rocks.mango.proto.api.PAssignPolicy}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.getAssignPolicy = function() {
  return /** @type{?proto.rocks.mango.proto.api.PAssignPolicy} */ (
    jspb.Message.getWrapperField(this, proto.rocks.mango.proto.api.PAssignPolicy, 12));
};


/** @param {?proto.rocks.mango.proto.api.PAssignPolicy|undefined} value */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.setAssignPolicy = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.rocks.mango.proto.api.PPolicyCommand.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.clearAssignPolicy = function() {
  this.setAssignPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.hasAssignPolicy = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional PUpdateLimits update_limits = 13;
 * @return {?proto.rocks.mango.proto.api.PUpdateLimits}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.getUpdateLimits = function() {
  return /** @type{?proto.rocks.mango.proto.api.PUpdateLimits} */ (
    jspb.Message.getWrapperField(this, proto.rocks.mango.proto.api.PUpdateLimits, 13));
};


/** @param {?proto.rocks.mango.proto.api.PUpdateLimits|undefined} value */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.setUpdateLimits = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.rocks.mango.proto.api.PPolicyCommand.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.clearUpdateLimits = function() {
  this.setUpdateLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.hasUpdateLimits = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional PRenewPolicy renew_policy = 14;
 * @return {?proto.rocks.mango.proto.api.PRenewPolicy}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.getRenewPolicy = function() {
  return /** @type{?proto.rocks.mango.proto.api.PRenewPolicy} */ (
    jspb.Message.getWrapperField(this, proto.rocks.mango.proto.api.PRenewPolicy, 14));
};


/** @param {?proto.rocks.mango.proto.api.PRenewPolicy|undefined} value */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.setRenewPolicy = function(value) {
  jspb.Message.setOneofWrapperField(this, 14, proto.rocks.mango.proto.api.PPolicyCommand.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.clearRenewPolicy = function() {
  this.setRenewPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicyCommand.prototype.hasRenewPolicy = function() {
  return jspb.Message.getField(this, 14) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PPolicyEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PPolicyEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PPolicyEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    commandId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errorCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
    eventType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    policy: (f = msg.getPolicy()) && proto$policy_entity_pb.PPolicy.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PPolicyEvent}
 */
proto.rocks.mango.proto.api.PPolicyEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PPolicyEvent;
  return proto.rocks.mango.proto.api.PPolicyEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PPolicyEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PPolicyEvent}
 */
proto.rocks.mango.proto.api.PPolicyEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommandId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 4:
      var value = /** @type {!proto.rocks.mango.proto.api.PPolicyEventType} */ (reader.readEnum());
      msg.setEventType(value);
      break;
    case 5:
      var value = new proto$policy_entity_pb.PPolicy;
      reader.readMessage(value,proto$policy_entity_pb.PPolicy.deserializeBinaryFromReader);
      msg.setPolicy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PPolicyEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PPolicyEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PPolicyEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommandId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrorCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getPolicy();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto$policy_entity_pb.PPolicy.serializeBinaryToWriter
    );
  }
};


/**
 * optional string command_id = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.getCommandId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.setCommandId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string error_code = 2;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.getErrorCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.setErrorCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string error_message = 3;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.setErrorMessage = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional PPolicyEventType event_type = 4;
 * @return {!proto.rocks.mango.proto.api.PPolicyEventType}
 */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.getEventType = function() {
  return /** @type {!proto.rocks.mango.proto.api.PPolicyEventType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.rocks.mango.proto.api.PPolicyEventType} value */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.setEventType = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional PPolicy policy = 5;
 * @return {?proto.rocks.mango.proto.api.PPolicy}
 */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.getPolicy = function() {
  return /** @type{?proto.rocks.mango.proto.api.PPolicy} */ (
    jspb.Message.getWrapperField(this, proto$policy_entity_pb.PPolicy, 5));
};


/** @param {?proto.rocks.mango.proto.api.PPolicy|undefined} value */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.setPolicy = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.clearPolicy = function() {
  this.setPolicy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicyEvent.prototype.hasPolicy = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PPolicyNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PPolicyNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PPolicyNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PPolicyNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    number: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PPolicyNumber}
 */
proto.rocks.mango.proto.api.PPolicyNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PPolicyNumber;
  return proto.rocks.mango.proto.api.PPolicyNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PPolicyNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PPolicyNumber}
 */
proto.rocks.mango.proto.api.PPolicyNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PPolicyNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PPolicyNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PPolicyNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PPolicyNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumber();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyNumber.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyNumber.prototype.setRequestId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string number = 2;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyNumber.prototype.getNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyNumber.prototype.setNumber = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PGeneratePolicyNumbers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PGeneratePolicyNumbers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quantitynumbers: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PGeneratePolicyNumbers}
 */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PGeneratePolicyNumbers;
  return proto.rocks.mango.proto.api.PGeneratePolicyNumbers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PGeneratePolicyNumbers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PGeneratePolicyNumbers}
 */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantitynumbers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PGeneratePolicyNumbers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PGeneratePolicyNumbers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuantitynumbers();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers.prototype.setRequestId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 quantityNumbers = 2;
 * @return {number}
 */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers.prototype.getQuantitynumbers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.rocks.mango.proto.api.PGeneratePolicyNumbers.prototype.setQuantitynumbers = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.rocks.mango.proto.api.PPolicyEventType = {
  UNDEFINED: 0,
  CREATED: 1,
  ASSIGNED: 2,
  LIMITS_UPDATED: 3,
  RENEWED: 4
};

goog.object.extend(exports, proto.rocks.mango.proto.api);
