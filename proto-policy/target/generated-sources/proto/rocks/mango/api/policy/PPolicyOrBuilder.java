// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto-policy/entity.proto

package rocks.mango.api.policy;

public interface PPolicyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:rocks.mango.proto.api.PPolicy)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * id полиса(UUID)
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  java.lang.String getId();
  /**
   * <pre>
   * id полиса(UUID)
   * </pre>
   *
   * <code>string id = 1;</code>
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <pre>
   * id пользователя(UUID)
   * </pre>
   *
   * <code>string user_id = 2;</code>
   */
  java.lang.String getUserId();
  /**
   * <pre>
   * id пользователя(UUID)
   * </pre>
   *
   * <code>string user_id = 2;</code>
   */
  com.google.protobuf.ByteString
      getUserIdBytes();

  /**
   * <pre>
   * дата начала действия полиса
   * </pre>
   *
   * <code>.rocks.mango.proto.PTimestamp start_date = 3;</code>
   */
  boolean hasStartDate();
  /**
   * <pre>
   * дата начала действия полиса
   * </pre>
   *
   * <code>.rocks.mango.proto.PTimestamp start_date = 3;</code>
   */
  rocks.mango.api.PTimestamp getStartDate();
  /**
   * <pre>
   * дата начала действия полиса
   * </pre>
   *
   * <code>.rocks.mango.proto.PTimestamp start_date = 3;</code>
   */
  rocks.mango.api.PTimestampOrBuilder getStartDateOrBuilder();

  /**
   * <pre>
   * дата окончания действия полиса
   * </pre>
   *
   * <code>.rocks.mango.proto.PTimestamp end_date = 4;</code>
   */
  boolean hasEndDate();
  /**
   * <pre>
   * дата окончания действия полиса
   * </pre>
   *
   * <code>.rocks.mango.proto.PTimestamp end_date = 4;</code>
   */
  rocks.mango.api.PTimestamp getEndDate();
  /**
   * <pre>
   * дата окончания действия полиса
   * </pre>
   *
   * <code>.rocks.mango.proto.PTimestamp end_date = 4;</code>
   */
  rocks.mango.api.PTimestampOrBuilder getEndDateOrBuilder();

  /**
   * <pre>
   * период(месяц, день etc)
   * </pre>
   *
   * <code>.rocks.mango.proto.api.PPeriodType period_type = 5;</code>
   */
  int getPeriodTypeValue();
  /**
   * <pre>
   * период(месяц, день etc)
   * </pre>
   *
   * <code>.rocks.mango.proto.api.PPeriodType period_type = 5;</code>
   */
  rocks.mango.api.policy.PPeriodType getPeriodType();

  /**
   * <pre>
   * платеж по которому куплен полис
   * </pre>
   *
   * <code>repeated string payment_ids = 6;</code>
   */
  java.util.List<java.lang.String>
      getPaymentIdsList();
  /**
   * <pre>
   * платеж по которому куплен полис
   * </pre>
   *
   * <code>repeated string payment_ids = 6;</code>
   */
  int getPaymentIdsCount();
  /**
   * <pre>
   * платеж по которому куплен полис
   * </pre>
   *
   * <code>repeated string payment_ids = 6;</code>
   */
  java.lang.String getPaymentIds(int index);
  /**
   * <pre>
   * платеж по которому куплен полис
   * </pre>
   *
   * <code>repeated string payment_ids = 6;</code>
   */
  com.google.protobuf.ByteString
      getPaymentIdsBytes(int index);

  /**
   * <pre>
   * номер полиса
   * </pre>
   *
   * <code>string policy_number = 7;</code>
   */
  java.lang.String getPolicyNumber();
  /**
   * <pre>
   * номер полиса
   * </pre>
   *
   * <code>string policy_number = 7;</code>
   */
  com.google.protobuf.ByteString
      getPolicyNumberBytes();

  /**
   * <pre>
   * версия
   * </pre>
   *
   * <code>int64 version = 8;</code>
   */
  long getVersion();

  /**
   * <pre>
   * id объекта страхования(пока адрес)
   * </pre>
   *
   * <code>string insurance_object_id = 10;</code>
   */
  java.lang.String getInsuranceObjectId();
  /**
   * <pre>
   * id объекта страхования(пока адрес)
   * </pre>
   *
   * <code>string insurance_object_id = 10;</code>
   */
  com.google.protobuf.ByteString
      getInsuranceObjectIdBytes();

  /**
   * <pre>
   * лимиты
   * </pre>
   *
   * <code>map&lt;string, .rocks.mango.proto.api.PLimit&gt; limits = 11;</code>
   */
  int getLimitsCount();
  /**
   * <pre>
   * лимиты
   * </pre>
   *
   * <code>map&lt;string, .rocks.mango.proto.api.PLimit&gt; limits = 11;</code>
   */
  boolean containsLimits(
      java.lang.String key);
  /**
   * Use {@link #getLimitsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, rocks.mango.api.policy.PLimit>
  getLimits();
  /**
   * <pre>
   * лимиты
   * </pre>
   *
   * <code>map&lt;string, .rocks.mango.proto.api.PLimit&gt; limits = 11;</code>
   */
  java.util.Map<java.lang.String, rocks.mango.api.policy.PLimit>
  getLimitsMap();
  /**
   * <pre>
   * лимиты
   * </pre>
   *
   * <code>map&lt;string, .rocks.mango.proto.api.PLimit&gt; limits = 11;</code>
   */

  rocks.mango.api.policy.PLimit getLimitsOrDefault(
      java.lang.String key,
      rocks.mango.api.policy.PLimit defaultValue);
  /**
   * <pre>
   * лимиты
   * </pre>
   *
   * <code>map&lt;string, .rocks.mango.proto.api.PLimit&gt; limits = 11;</code>
   */

  rocks.mango.api.policy.PLimit getLimitsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * цена за период
   * </pre>
   *
   * <code>.rocks.mango.proto.PAmount price = 12;</code>
   */
  boolean hasPrice();
  /**
   * <pre>
   * цена за период
   * </pre>
   *
   * <code>.rocks.mango.proto.PAmount price = 12;</code>
   */
  rocks.mango.api.PAmount getPrice();
  /**
   * <pre>
   * цена за период
   * </pre>
   *
   * <code>.rocks.mango.proto.PAmount price = 12;</code>
   */
  rocks.mango.api.PAmountOrBuilder getPriceOrBuilder();

  /**
   * <pre>
   * id подписки
   * </pre>
   *
   * <code>string subscription_id = 13;</code>
   */
  java.lang.String getSubscriptionId();
  /**
   * <pre>
   * id подписки
   * </pre>
   *
   * <code>string subscription_id = 13;</code>
   */
  com.google.protobuf.ByteString
      getSubscriptionIdBytes();
}
