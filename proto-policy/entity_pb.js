/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto$types_base_pb = require('../proto-types/base_pb.js');
goog.object.extend(proto, proto$types_base_pb);
goog.exportSymbol('proto.rocks.mango.proto.api.PCard', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PLimit', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PPeriodType', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PPolicy', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PPolicyAppView', null, global);
goog.exportSymbol('proto.rocks.mango.proto.api.PPolicyStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.rocks.mango.proto.api.PPolicy.repeatedFields_, null);
};
goog.inherits(proto.rocks.mango.proto.api.PPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PPolicy.displayName = 'proto.rocks.mango.proto.api.PPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PLimit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rocks.mango.proto.api.PLimit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PLimit.displayName = 'proto.rocks.mango.proto.api.PLimit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PPolicyAppView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rocks.mango.proto.api.PPolicyAppView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PPolicyAppView.displayName = 'proto.rocks.mango.proto.api.PPolicyAppView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.rocks.mango.proto.api.PCard = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.rocks.mango.proto.api.PCard, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.rocks.mango.proto.api.PCard.displayName = 'proto.rocks.mango.proto.api.PCard';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.rocks.mango.proto.api.PPolicy.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    startDate: (f = msg.getStartDate()) && proto$types_base_pb.PTimestamp.toObject(includeInstance, f),
    endDate: (f = msg.getEndDate()) && proto$types_base_pb.PTimestamp.toObject(includeInstance, f),
    periodType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    paymentIdsList: jspb.Message.getRepeatedField(msg, 6),
    policyNumber: jspb.Message.getFieldWithDefault(msg, 7, ""),
    version: jspb.Message.getFieldWithDefault(msg, 8, 0),
    insuranceObjectId: jspb.Message.getFieldWithDefault(msg, 10, ""),
    limitsMap: (f = msg.getLimitsMap()) ? f.toObject(includeInstance, proto.rocks.mango.proto.api.PLimit.toObject) : [],
    price: (f = msg.getPrice()) && proto$types_base_pb.PAmount.toObject(includeInstance, f),
    subscriptionId: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PPolicy}
 */
proto.rocks.mango.proto.api.PPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PPolicy;
  return proto.rocks.mango.proto.api.PPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PPolicy}
 */
proto.rocks.mango.proto.api.PPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = new proto$types_base_pb.PTimestamp;
      reader.readMessage(value,proto$types_base_pb.PTimestamp.deserializeBinaryFromReader);
      msg.setStartDate(value);
      break;
    case 4:
      var value = new proto$types_base_pb.PTimestamp;
      reader.readMessage(value,proto$types_base_pb.PTimestamp.deserializeBinaryFromReader);
      msg.setEndDate(value);
      break;
    case 5:
      var value = /** @type {!proto.rocks.mango.proto.api.PPeriodType} */ (reader.readEnum());
      msg.setPeriodType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addPaymentIds(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPolicyNumber(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVersion(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setInsuranceObjectId(value);
      break;
    case 11:
      var value = msg.getLimitsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.rocks.mango.proto.api.PLimit.deserializeBinaryFromReader, "");
         });
      break;
    case 12:
      var value = new proto$types_base_pb.PAmount;
      reader.readMessage(value,proto$types_base_pb.PAmount.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStartDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto$types_base_pb.PTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto$types_base_pb.PTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getPeriodType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getPaymentIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getPolicyNumber();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getInsuranceObjectId();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLimitsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.rocks.mango.proto.api.PLimit.serializeBinaryToWriter);
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto$types_base_pb.PAmount.serializeBinaryToWriter
    );
  }
  f = message.getSubscriptionId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional rocks.mango.proto.PTimestamp start_date = 3;
 * @return {?proto.rocks.mango.proto.PTimestamp}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getStartDate = function() {
  return /** @type{?proto.rocks.mango.proto.PTimestamp} */ (
    jspb.Message.getWrapperField(this, proto$types_base_pb.PTimestamp, 3));
};


/** @param {?proto.rocks.mango.proto.PTimestamp|undefined} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setStartDate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicy.prototype.clearStartDate = function() {
  this.setStartDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.hasStartDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional rocks.mango.proto.PTimestamp end_date = 4;
 * @return {?proto.rocks.mango.proto.PTimestamp}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getEndDate = function() {
  return /** @type{?proto.rocks.mango.proto.PTimestamp} */ (
    jspb.Message.getWrapperField(this, proto$types_base_pb.PTimestamp, 4));
};


/** @param {?proto.rocks.mango.proto.PTimestamp|undefined} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setEndDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicy.prototype.clearEndDate = function() {
  this.setEndDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.hasEndDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional PPeriodType period_type = 5;
 * @return {!proto.rocks.mango.proto.api.PPeriodType}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getPeriodType = function() {
  return /** @type {!proto.rocks.mango.proto.api.PPeriodType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.rocks.mango.proto.api.PPeriodType} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setPeriodType = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated string payment_ids = 6;
 * @return {!Array<string>}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getPaymentIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setPaymentIdsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.rocks.mango.proto.api.PPolicy.prototype.addPaymentIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.rocks.mango.proto.api.PPolicy.prototype.clearPaymentIdsList = function() {
  this.setPaymentIdsList([]);
};


/**
 * optional string policy_number = 7;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getPolicyNumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setPolicyNumber = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 version = 8;
 * @return {number}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setVersion = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string insurance_object_id = 10;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getInsuranceObjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setInsuranceObjectId = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * map<string, PLimit> limits = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.rocks.mango.proto.api.PLimit>}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getLimitsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.rocks.mango.proto.api.PLimit>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      proto.rocks.mango.proto.api.PLimit));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.rocks.mango.proto.api.PPolicy.prototype.clearLimitsMap = function() {
  this.getLimitsMap().clear();
};


/**
 * optional rocks.mango.proto.PAmount price = 12;
 * @return {?proto.rocks.mango.proto.PAmount}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getPrice = function() {
  return /** @type{?proto.rocks.mango.proto.PAmount} */ (
    jspb.Message.getWrapperField(this, proto$types_base_pb.PAmount, 12));
};


/** @param {?proto.rocks.mango.proto.PAmount|undefined} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicy.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string subscription_id = 13;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicy.prototype.getSubscriptionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicy.prototype.setSubscriptionId = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PLimit.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PLimit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PLimit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PLimit.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && proto$types_base_pb.PAmount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PLimit}
 */
proto.rocks.mango.proto.api.PLimit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PLimit;
  return proto.rocks.mango.proto.api.PLimit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PLimit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PLimit}
 */
proto.rocks.mango.proto.api.PLimit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto$types_base_pb.PAmount;
      reader.readMessage(value,proto$types_base_pb.PAmount.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PLimit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PLimit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PLimit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PLimit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto$types_base_pb.PAmount.serializeBinaryToWriter
    );
  }
};


/**
 * optional rocks.mango.proto.PAmount value = 1;
 * @return {?proto.rocks.mango.proto.PAmount}
 */
proto.rocks.mango.proto.api.PLimit.prototype.getValue = function() {
  return /** @type{?proto.rocks.mango.proto.PAmount} */ (
    jspb.Message.getWrapperField(this, proto$types_base_pb.PAmount, 1));
};


/** @param {?proto.rocks.mango.proto.PAmount|undefined} value */
proto.rocks.mango.proto.api.PLimit.prototype.setValue = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PLimit.prototype.clearValue = function() {
  this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PLimit.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PPolicyAppView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PPolicyAppView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PPolicyAppView.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    price: (f = msg.getPrice()) && proto$types_base_pb.PAmount.toObject(includeInstance, f),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    limitsMap: (f = msg.getLimitsMap()) ? f.toObject(includeInstance, proto.rocks.mango.proto.api.PLimit.toObject) : [],
    status: jspb.Message.getFieldWithDefault(msg, 5, 0),
    subscriptionId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    endDate: (f = msg.getEndDate()) && proto$types_base_pb.PTimestamp.toObject(includeInstance, f),
    startDate: (f = msg.getStartDate()) && proto$types_base_pb.PTimestamp.toObject(includeInstance, f),
    paid: jspb.Message.getFieldWithDefault(msg, 9, false),
    cancelled: jspb.Message.getFieldWithDefault(msg, 10, false),
    pdfLink: jspb.Message.getFieldWithDefault(msg, 11, ""),
    pdfSignatureLink: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PPolicyAppView}
 */
proto.rocks.mango.proto.api.PPolicyAppView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PPolicyAppView;
  return proto.rocks.mango.proto.api.PPolicyAppView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PPolicyAppView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PPolicyAppView}
 */
proto.rocks.mango.proto.api.PPolicyAppView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto$types_base_pb.PAmount;
      reader.readMessage(value,proto$types_base_pb.PAmount.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = msg.getLimitsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.rocks.mango.proto.api.PLimit.deserializeBinaryFromReader, "");
         });
      break;
    case 5:
      var value = /** @type {!proto.rocks.mango.proto.api.PPolicyStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubscriptionId(value);
      break;
    case 7:
      var value = new proto$types_base_pb.PTimestamp;
      reader.readMessage(value,proto$types_base_pb.PTimestamp.deserializeBinaryFromReader);
      msg.setEndDate(value);
      break;
    case 8:
      var value = new proto$types_base_pb.PTimestamp;
      reader.readMessage(value,proto$types_base_pb.PTimestamp.deserializeBinaryFromReader);
      msg.setStartDate(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPaid(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCancelled(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPdfLink(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPdfSignatureLink(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PPolicyAppView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PPolicyAppView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PPolicyAppView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto$types_base_pb.PAmount.serializeBinaryToWriter
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLimitsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.rocks.mango.proto.api.PLimit.serializeBinaryToWriter);
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getSubscriptionId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEndDate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto$types_base_pb.PTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getStartDate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto$types_base_pb.PTimestamp.serializeBinaryToWriter
    );
  }
  f = message.getPaid();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getCancelled();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getPdfLink();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPdfSignatureLink();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional rocks.mango.proto.PAmount price = 2;
 * @return {?proto.rocks.mango.proto.PAmount}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getPrice = function() {
  return /** @type{?proto.rocks.mango.proto.PAmount} */ (
    jspb.Message.getWrapperField(this, proto$types_base_pb.PAmount, 2));
};


/** @param {?proto.rocks.mango.proto.PAmount|undefined} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setAddress = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * map<string, PLimit> limits = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.rocks.mango.proto.api.PLimit>}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getLimitsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.rocks.mango.proto.api.PLimit>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      proto.rocks.mango.proto.api.PLimit));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.clearLimitsMap = function() {
  this.getLimitsMap().clear();
};


/**
 * optional PPolicyStatus status = 5;
 * @return {!proto.rocks.mango.proto.api.PPolicyStatus}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getStatus = function() {
  return /** @type {!proto.rocks.mango.proto.api.PPolicyStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.rocks.mango.proto.api.PPolicyStatus} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional string subscription_id = 6;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getSubscriptionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setSubscriptionId = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional rocks.mango.proto.PTimestamp end_date = 7;
 * @return {?proto.rocks.mango.proto.PTimestamp}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getEndDate = function() {
  return /** @type{?proto.rocks.mango.proto.PTimestamp} */ (
    jspb.Message.getWrapperField(this, proto$types_base_pb.PTimestamp, 7));
};


/** @param {?proto.rocks.mango.proto.PTimestamp|undefined} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setEndDate = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.clearEndDate = function() {
  this.setEndDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.hasEndDate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional rocks.mango.proto.PTimestamp start_date = 8;
 * @return {?proto.rocks.mango.proto.PTimestamp}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getStartDate = function() {
  return /** @type{?proto.rocks.mango.proto.PTimestamp} */ (
    jspb.Message.getWrapperField(this, proto$types_base_pb.PTimestamp, 8));
};


/** @param {?proto.rocks.mango.proto.PTimestamp|undefined} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setStartDate = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.clearStartDate = function() {
  this.setStartDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.hasStartDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool paid = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getPaid = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setPaid = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool cancelled = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getCancelled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setCancelled = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string pdf_link = 11;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getPdfLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setPdfLink = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string pdf_signature_link = 12;
 * @return {string}
 */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.getPdfSignatureLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PPolicyAppView.prototype.setPdfSignatureLink = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.rocks.mango.proto.api.PCard.prototype.toObject = function(opt_includeInstance) {
  return proto.rocks.mango.proto.api.PCard.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.rocks.mango.proto.api.PCard} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PCard.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstSix: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lastFour: jspb.Message.getFieldWithDefault(msg, 2, ""),
    type: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expDate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    token: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.rocks.mango.proto.api.PCard}
 */
proto.rocks.mango.proto.api.PCard.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.rocks.mango.proto.api.PCard;
  return proto.rocks.mango.proto.api.PCard.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.rocks.mango.proto.api.PCard} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.rocks.mango.proto.api.PCard}
 */
proto.rocks.mango.proto.api.PCard.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstSix(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastFour(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setExpDate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.rocks.mango.proto.api.PCard.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.rocks.mango.proto.api.PCard.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.rocks.mango.proto.api.PCard} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.rocks.mango.proto.api.PCard.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstSix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastFour();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpDate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string first_six = 1;
 * @return {string}
 */
proto.rocks.mango.proto.api.PCard.prototype.getFirstSix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PCard.prototype.setFirstSix = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string last_four = 2;
 * @return {string}
 */
proto.rocks.mango.proto.api.PCard.prototype.getLastFour = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PCard.prototype.setLastFour = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string type = 3;
 * @return {string}
 */
proto.rocks.mango.proto.api.PCard.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PCard.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string exp_date = 4;
 * @return {string}
 */
proto.rocks.mango.proto.api.PCard.prototype.getExpDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PCard.prototype.setExpDate = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string token = 5;
 * @return {string}
 */
proto.rocks.mango.proto.api.PCard.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.rocks.mango.proto.api.PCard.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.rocks.mango.proto.api.PPeriodType = {
  MONTH: 0,
  DAY: 1
};

/**
 * @enum {number}
 */
proto.rocks.mango.proto.api.PPolicyStatus = {
  ACTIVE: 0,
  INACTIVE: 1,
  WILL_BE_ACTIVE: 2,
  WILL_BE_INACTIVE: 3
};

goog.object.extend(exports, proto.rocks.mango.proto.api);
